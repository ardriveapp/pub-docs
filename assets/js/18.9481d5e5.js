(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{299:function(e,t,a){"use strict";a.r(t);var i=a(10),n=Object(i.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"create-file"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#create-file"}},[e._v("#")]),e._v(" Create File")]),e._v(" "),t("h2",{attrs:{id:"new-file-entity"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#new-file-entity"}},[e._v("#")]),e._v(" New File Entity")]),e._v(" "),t("ul",[t("li",[e._v("A new file metadata transaction and a separate data transaction are created when a user wants to create a new file.")]),e._v(" "),t("li",[e._v("Files can only be created in existing drives, and must have a valid Drive-Id.")]),e._v(" "),t("li",[e._v("Files can only be created in existing parent folders, and must have a valid Parent-Folder-Id.")]),e._v(" "),t("li",[e._v("The new File Entity Data transaction must only specify the file’s mime type aka Content-Type.")]),e._v(" "),t("li",[e._v("The new file metadata transaction must generate a new UUIDv4 for the File-Id.")]),e._v(" "),t("li",[e._v('File metadata transactions must have Entity-Type: "file".')]),e._v(" "),t("li",[e._v("The client gets the user’s local time for the Unix-Time tag, represented as Seconds Since Unix Epoch.\n"),t("ul",[t("li",[e._v("The client populates the File Entity Metadata Transaction Data JSON after creating the data transaction.")]),e._v(" "),t("li",[t("code",[e._v("name")]),e._v(" The name of the file including extension.")]),e._v(" "),t("li",[t("code",[e._v("size")]),e._v(" The size of the file on disk, in bytes as an integer.")]),e._v(" "),t("li",[t("code",[e._v("lastModifiedDate")]),e._v(" The file’s last time of modification as reported by the user’s operating system, in milliseconds since Unix epoch.")]),e._v(" "),t("li",[t("code",[e._v("dataTxId")]),e._v(" The Arweave transaction id of this File Entity’s Data Transaction.")]),e._v(" "),t("li",[t("code",[e._v("dataContentType")]),e._v(" The mime time of this File Entity’s data must be determined by the client.")])])]),e._v(" "),t("li",[e._v("If the File is private:\n"),t("ul",[t("li",[e._v("Its "),t("code",[e._v("Cipher")]),e._v(" tag must be filled out with the respective encryption algorithm (currently "),t("code",[e._v("AES256-GCM")]),e._v(") for both the Metadata and Data transactions.")]),e._v(" "),t("li",[e._v("Its "),t("code",[e._v("Cipher-IV")]),e._v(" tag must be filled out with the generated Initialization Vector for both the Metadata and Data transactions.  Each one has its own unique IV.")]),e._v(" "),t("li",[e._v("It must have the content type "),t("code",[e._v('Content-Type: "application/octet-stream"')]),e._v(" for both the Metadata and Data transactions.")]),e._v(" "),t("li",[e._v("The ArFS client must encrypt the File Entity’s Data and Metadata JSON using their assigned "),t("code",[e._v("Cipher")]),e._v(" and "),t("code",[e._v("Cipher-IV")])])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);